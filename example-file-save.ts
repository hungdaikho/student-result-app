// V√≠ d·ª• n·∫øu mu·ªën l∆∞u file v·∫≠t l√Ω tr√™n server
import fs from 'fs'
import path from 'path'

// Th√™m v√†o API upload route.ts
async function saveFileToServer(file: File, year: number, examType: string) {
    // T·∫°o th∆∞ m·ª•c upload n·∫øu ch∆∞a c√≥
    const uploadDir = path.join(process.cwd(), 'uploads', String(year), examType)
    if (!fs.existsSync(uploadDir)) {
        fs.mkdirSync(uploadDir, { recursive: true })
    }

    // T·∫°o t√™n file v·ªõi timestamp
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-')
    const fileName = `${examType}_${year}_${timestamp}.xlsx`
    const filePath = path.join(uploadDir, fileName)

    // L∆∞u file
    const arrayBuffer = await file.arrayBuffer()
    const buffer = Buffer.from(arrayBuffer)
    fs.writeFileSync(filePath, buffer)

    console.log('üìÅ File saved to:', filePath)
    return filePath
}

// S·ª≠ d·ª•ng trong API:
// const savedFilePath = await saveFileToServer(file, year, examType)
